@model Persada.Fr.ModelView.CUSTOM_CHANGE_PASSWORD
@{
    ViewBag.Title = "Reset password";
}

<h2>@ViewBag.Title.</h2>
@if (ViewBag.msgSuccess != null)
{
    <div class="alert alert-success">
        <a href="#" class="close" type="button" data-dismiss="alert">
            <i class="ace-icon fa fa-times"></i>
        </a>

        <strong>
            <i class="ace-icon fa fa-check"></i>
        </strong>
        @ViewBag.msgSuccess
        <br>
    </div>
}

@if (ViewBag.msgError != null)
{
    <div class="alert alert-danger">
        <a href="#" class="close" type="button" data-dismiss="alert">
            <i class="ace-icon fa fa-times"></i>
        </a>
        <strong>
            <i class="ace-icon fa fa-times"></i>
        </strong>
        @ViewBag.msgError
        <br>
    </div>
} 
@using (Html.BeginForm("ActionChangePassword", "User", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Change your password.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
 
    
    <div class="form-group">
        @Html.LabelFor(m => m.OldPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Reset" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
