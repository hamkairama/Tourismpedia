@model Persada.Fr.ModelView.TOURIS_TV_SOSMED
@{
    ViewBag.Title = "Edit Sosmed";
}

<h2>@ViewBag.Title.</h2>


@using (Html.BeginForm("ActionEdit", "Sosmed", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        
        <div class="form-group">
            <label class="col-md-2 control-label">Type </label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TYPE, (IEnumerable<SelectListItem>)ViewBag.GetTypeSosmedList, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2 control-label">Name</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.NAME, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NAME, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-2 control-label">Description</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.DESCRIPTION, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DESCRIPTION, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2 control-label">Icon</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ICON, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ICON, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2 control-label">Url</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.URL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.URL, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-2 control-label">Data Embed</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.DATA_EMBED, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DATA_EMBED, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2 control-label">Height</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.HEIGHT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HEIGHT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2 control-label">Width</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.WIDTH, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WIDTH, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2 control-label">Widget Id</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.DATA_WIDGET_ID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DATA_WIDGET_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
